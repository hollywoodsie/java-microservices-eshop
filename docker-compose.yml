
services:
  discovery-service:
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
    ports:
      - "${DISCOVERY_API_PORT}:${DISCOVERY_API_PORT}"

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "${USER_API_PORT}:${USER_API_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
      discovery-service:
        condition: service_started
      rabbitmq:
        condition: service_started

    environment:
      SPRING_DATASOURCE_URL: ${USER_DB_URL}
      SPRING_RABBITMQ_HOST: ${RABBIT_HOST}
      SPRING_RABBITMQ_PORT: ${RABBIT_PORT}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${DISCOVERY_URL}

  product-service:
    build:
      context: ./catalog-service
      dockerfile: Dockerfile
    ports:
      - "${PRODUCT_API_PORT}:${PRODUCT_API_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
      discovery-service:
        condition: service_started
      rabbitmq:
        condition: service_started

    environment:
      SPRING_DATASOURCE_URL: ${PRODUCT_DB_URL}
      SPRING_RABBITMQ_HOST: ${RABBIT_HOST}
      SPRING_RABBITMQ_PORT: ${RABBIT_PORT}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${DISCOVERY_URL}

  cart-service:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    ports:
      - "${CART_API_PORT}:${CART_API_PORT}"
    depends_on:
      postgres:
          condition: service_healthy
      discovery-service:
          condition: service_started
      rabbitmq:
          condition: service_started

    environment:
      SPRING_DATASOURCE_URL: ${CART_DB_URL}
      SPRING_RABBITMQ_HOST: ${RABBIT_HOST}
      SPRING_RABBITMQ_PORT: ${RABBIT_PORT}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${DISCOVERY_URL}

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "${GATEWAY_API_PORT}:${GATEWAY_API_PORT}"
    depends_on:
      - discovery-service
      - cart-service
      - product-service
      - user-service
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${DISCOVERY_URL}

  postgres:
    image: postgres:latest
    restart: unless-stopped
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U ${POSTGRES_USERNAME:-postgres}' ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./configs/postgres/init:/docker-entrypoint-initdb.d

  rabbitmq:
    image: rabbitmq:latest
    ports:
      - "${RABBIT_PORT}:${RABBIT_PORT}"
      - "15672:15672"  # Optional: management UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASS}




